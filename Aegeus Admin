do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 0;
		local v19;
		local v20;
		local v21;
		local v22;
		local v23;
		local v24;
		local v25;
		local v26;
		local v27;
		local v28;
		local v29;
		local v30;
		while true do
			if (v18 == 2) then
				function v22()
					local v39 = v1(v16, v19, v19);
					v19 = v19 + 1;
					return v39;
				end
				v23 = nil;
				function v23()
					local v40, v41 = v1(v16, v19, v19 + (6 - 4));
					v19 = v19 + 2 + 0;
					return (v41 * 256) + v40;
				end
				v18 = 3;
			end
			if (v18 == 6) then
				v29 = nil;
				function v29()
					local v42 = 0;
					local v43;
					local v44;
					local v45;
					local v46;
					local v47;
					local v48;
					local v49;
					local v50;
					while true do
						if ((1008 - (640 + 365)) == v42) then
							local v78 = 0 - 0;
							while true do
								if (v78 ~= (0 + 0)) then
								else
									v49 = nil;
									v50 = nil;
									v78 = 1;
								end
								if (v78 ~= 1) then
								else
									v42 = 3 + 1;
									break;
								end
							end
						end
						if (v42 == 1) then
							v45 = nil;
							v46 = nil;
							v42 = 603 - (492 + 109);
						end
						if (0 == v42) then
							local v79 = 0 - 0;
							while true do
								if (v79 == 1) then
									v42 = 1;
									break;
								end
								if (v79 == 0) then
									v43 = 0 + 0;
									v44 = nil;
									v79 = 1 + 0;
								end
							end
						end
						if (4 == v42) then
							while true do
								if (v43 == 2) then
									local v96 = 0 - 0;
									local v97;
									while true do
										if (v96 == (0 - 0)) then
											v97 = 0 + 0;
											while true do
												if (v97 == 0) then
													local v109 = 0 + 0;
													while true do
														if (v109 == (1 + 0)) then
															v97 = 411 - (364 + 46);
															break;
														end
														if (v109 ~= 0) then
														else
															v48 = nil;
															v49 = nil;
															v109 = 1 - 0;
														end
													end
												end
												if (v97 == (1 + 0)) then
													v43 = 1908 - (573 + 1332);
													break;
												end
											end
											break;
										end
									end
								end
								if (v43 ~= 1) then
								else
									local v98 = 213 - (168 + 45);
									while true do
										if (v98 == 0) then
											local v107 = 0 - 0;
											while true do
												if ((2 - 1) == v107) then
													v98 = 1;
													break;
												end
												if (0 == v107) then
													v46 = nil;
													v47 = nil;
													v107 = 1;
												end
											end
										end
										if (v98 == 1) then
											v43 = 2;
											break;
										end
									end
								end
								if (v43 == 3) then
									v50 = nil;
									while true do
										local v101 = 0 + 0;
										local v102;
										while true do
											if (v101 == (561 - (268 + 293))) then
												v102 = 0;
												while true do
													if ((54 - (47 + 7)) ~= v102) then
													else
														local v110 = 0;
														while true do
															if (v110 == (511 - (205 + 306))) then
																if (v44 == 1) then
																	local v114 = 884 - (108 + 776);
																	local v115;
																	while true do
																		if (v114 == (0 + 0)) then
																			v115 = 0;
																			while true do
																				if (v115 == (657 - (382 + 274))) then
																					local v212 = 0 - 0;
																					while true do
																						if (v212 == 1) then
																							v115 = 2;
																							break;
																						end
																						if (v212 ~= (0 - 0)) then
																						else
																							local v237 = 0;
																							while true do
																								if (v237 ~= (913 - (684 + 228))) then
																								else
																									v212 = 1 + 0;
																									break;
																								end
																								if (v237 ~= 0) then
																								else
																									for v283 = 1 + 0, v49 do
																										local v284 = 0 + 0;
																										local v285;
																										local v286;
																										while true do
																											if (v284 == 1) then
																												if (v285 == (2 - 1)) then
																													v286 = v22() ~= 0;
																												elseif (v285 == 2) then
																													v286 = v25();
																												elseif (v285 == (5 - 2)) then
																													v286 = v26();
																												end
																												v50[v283] = v286;
																												break;
																											end
																											if (v284 == (0 + 0)) then
																												local v300 = 0 - 0;
																												while true do
																													if (v300 == (0 - 0)) then
																														local v326 = 0 - 0;
																														while true do
																															if (v326 ~= (0 + 0)) then
																															else
																																v285 = v22();
																																v286 = nil;
																																v326 = 1 + 0;
																															end
																															if (v326 ~= 1) then
																															else
																																v300 = 1906 - (690 + 1215);
																																break;
																															end
																														end
																													end
																													if (v300 == (1 - 0)) then
																														v284 = 2 - 1;
																														break;
																													end
																												end
																											end
																										end
																									end
																									v48[3 + 0] = v22();
																									v237 = 1 + 0;
																								end
																							end
																						end
																					end
																				end
																				if (0 == v115) then
																					v49 = v24();
																					v50 = {};
																					v115 = 1;
																				end
																				if ((1557 - (33 + 1522)) ~= v115) then
																				else
																					v44 = 2;
																					break;
																				end
																			end
																			break;
																		end
																	end
																end
																if (v44 ~= (7 - 5)) then
																else
																	local v116 = 0;
																	while true do
																		local v121 = 441 - (80 + 361);
																		while true do
																			if (v121 == 0) then
																				if (v116 == 0) then
																					local v213 = 0 + 0;
																					while true do
																						if (v213 ~= (348 - (91 + 256))) then
																						else
																							v116 = 1657 - (378 + 1278);
																							break;
																						end
																						if (v213 == 0) then
																							for v255 = 1, v24() do
																								local v256 = 0;
																								local v257;
																								local v258;
																								while true do
																									if (v256 ~= 0) then
																									else
																										v257 = 0 - 0;
																										v258 = nil;
																										v256 = 1 + 0;
																									end
																									if (v256 ~= (537 - (487 + 49))) then
																									else
																										while true do
																											if (v257 ~= 0) then
																											else
																												v258 = v22();
																												if (v21(v258, 2 - 1, 1) == (0 - 0)) then
																													local v316 = 0 + 0;
																													local v317;
																													local v318;
																													local v319;
																													local v320;
																													local v321;
																													local v322;
																													while true do
																														if ((1725 - (1311 + 412)) ~= v316) then
																														else
																															v321 = nil;
																															v322 = nil;
																															v316 = 2 + 1;
																														end
																														if (v316 == 0) then
																															v317 = 0;
																															v318 = nil;
																															v316 = 1;
																														end
																														if (v316 ~= (7 - 4)) then
																														else
																															while true do
																																if (v317 == (196 - (116 + 79))) then
																																	v320 = nil;
																																	v321 = nil;
																																	v317 = 1 + 1;
																																end
																																if (v317 == 2) then
																																	v322 = nil;
																																	while true do
																																		if ((3 - 2) == v318) then
																																			local v336 = 0 - 0;
																																			while true do
																																				if (v336 == 1) then
																																					v318 = 2;
																																					break;
																																				end
																																				if (v336 ~= 0) then
																																				else
																																					v321 = nil;
																																					v322 = nil;
																																					v336 = 1;
																																				end
																																			end
																																		end
																																		if (v318 ~= (0 + 0)) then
																																		else
																																			local v337 = 0;
																																			while true do
																																				if (v337 == 1) then
																																					v318 = 1;
																																					break;
																																				end
																																				if (v337 == (0 - 0)) then
																																					v319 = 0;
																																					v320 = nil;
																																					v337 = 1 + 0;
																																				end
																																			end
																																		end
																																		if (v318 == (2 + 0)) then
																																			while true do
																																				if (v319 ~= (3 - 0)) then
																																				else
																																					if (v21(v321, 3, 2 + 1) == 1) then
																																						v322[1541 - (134 + 1403)] = v50[v322[4]];
																																					end
																																					v45[v255] = v322;
																																					break;
																																				end
																																				if (v319 == (1 + 1)) then
																																					local v339 = 0 - 0;
																																					while true do
																																						if (v339 == (667 - (612 + 54))) then
																																							v319 = 3;
																																							break;
																																						end
																																						if (v339 ~= 0) then
																																						else
																																							local v348 = 0;
																																							local v349;
																																							while true do
																																								if (v348 == 0) then
																																									v349 = 0 - 0;
																																									while true do
																																										if (v349 == 0) then
																																											local v353 = 0;
																																											while true do
																																												if (v353 ~= (1 + 0)) then
																																												else
																																													v349 = 4 - 3;
																																													break;
																																												end
																																												if (v353 == (0 + 0)) then
																																													if (v21(v321, 3 - 2, 1) == 1) then
																																														v322[1 + 1] = v50[v322[2]];
																																													end
																																													if (v21(v321, 1969 - (1790 + 177), 1 + 1) ~= 1) then
																																													else
																																														v322[3] = v50[v322[8 - 5]];
																																													end
																																													v353 = 4 - 3;
																																												end
																																											end
																																										end
																																										if (v349 == (1326 - (226 + 1099))) then
																																											v339 = 1;
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						end
																																					end
																																				end
																																				if (0 ~= v319) then
																																				else
																																					local v340 = 0;
																																					local v341;
																																					while true do
																																						if (v340 == 0) then
																																							v341 = 0 + 0;
																																							while true do
																																								if (v341 == 1) then
																																									v319 = 1;
																																									break;
																																								end
																																								if (v341 ~= 0) then
																																								else
																																									local v352 = 0;
																																									while true do
																																										if (v352 ~= (0 - 0)) then
																																										else
																																											v320 = v21(v258, 1476 - (744 + 730), 682 - (198 + 481));
																																											v321 = v21(v258, 4, 6);
																																											v352 = 2 - 1;
																																										end
																																										if (v352 ~= 1) then
																																										else
																																											v341 = 1;
																																											break;
																																										end
																																									end
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				end
																																				if (v319 == (1494 - (241 + 1252))) then
																																					local v342 = 0 - 0;
																																					while true do
																																						if (v342 == 1) then
																																							v319 = 4 - 2;
																																							break;
																																						end
																																						if (v342 ~= 0) then
																																						else
																																							local v350 = 0 - 0;
																																							local v351;
																																							while true do
																																								if (v350 == 0) then
																																									v351 = 0 + 0;
																																									while true do
																																										if (v351 == 0) then
																																											local v354 = 0 - 0;
																																											while true do
																																												if (v354 ~= 0) then
																																												else
																																													v322 = {v23(),v23(),nil,nil};
																																													if (v320 == 0) then
																																														local v359 = 0 + 0;
																																														local v360;
																																														local v361;
																																														while true do
																																															if (v359 == 1) then
																																																while true do
																																																	if (v360 == (0 + 0)) then
																																																		v361 = 0;
																																																		while true do
																																																			if ((0 - 0) ~= v361) then
																																																			else
																																																				v322[3] = v23();
																																																				v322[1735 - (675 + 1056)] = v23();
																																																				break;
																																																			end
																																																		end
																																																		break;
																																																	end
																																																end
																																																break;
																																															end
																																															if (v359 ~= (1074 - (709 + 365))) then
																																															else
																																																local v363 = 0;
																																																while true do
																																																	if ((0 - 0) == v363) then
																																																		v360 = 0 - 0;
																																																		v361 = nil;
																																																		v363 = 1;
																																																	end
																																																	if (1 ~= v363) then
																																																	else
																																																		v359 = 859 - (778 + 80);
																																																		break;
																																																	end
																																																end
																																															end
																																														end
																																													elseif (v320 == 1) then
																																														v322[3] = v24();
																																													elseif (v320 == (5 - 3)) then
																																														v322[5 - 2] = v24() - ((7 - 5) ^ 16);
																																													elseif (v320 ~= (4 - 1)) then
																																													else
																																														local v365 = 0;
																																														local v366;
																																														while true do
																																															if (v365 ~= (0 - 0)) then
																																															else
																																																v366 = 0 - 0;
																																																while true do
																																																	if (v366 ~= (0 - 0)) then
																																																	else
																																																		v322[3] = v24() - ((318 - (13 + 303)) ^ 16);
																																																		v322[1 + 3] = v23();
																																																		break;
																																																	end
																																																end
																																																break;
																																															end
																																														end
																																													end
																																													v354 = 1 + 0;
																																												end
																																												if (v354 == 1) then
																																													v351 = 1;
																																													break;
																																												end
																																											end
																																										end
																																										if (v351 == (1691 - (422 + 1268))) then
																																											v342 = 1;
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						end
																																					end
																																				end
																																			end
																																			break;
																																		end
																																	end
																																	break;
																																end
																																if (v317 == (0 + 0)) then
																																	v318 = 0;
																																	v319 = nil;
																																	v317 = 1;
																																end
																															end
																															break;
																														end
																														if (v316 == 1) then
																															v319 = nil;
																															v320 = nil;
																															v316 = 7 - 5;
																														end
																													end
																												end
																												break;
																											end
																										end
																										break;
																									end
																								end
																							end
																							for v259 = 1, v24() do
																								v46[v259 - (1 + 0)] = v29();
																							end
																							v213 = 1;
																						end
																					end
																				end
																				if (v116 == 1) then
																					for v227 = 1, v24() do
																						v47[v227] = v24();
																					end
																					return v48;
																				end
																				break;
																			end
																		end
																	end
																end
																v110 = 1 + 0;
															end
															if (v110 == (1 + 0)) then
																v102 = 2 - 1;
																break;
															end
														end
													end
													if (v102 == (1 - 0)) then
														if (v44 ~= (0 - 0)) then
														else
															local v113 = 0;
															while true do
																if (1 == v113) then
																	local v117 = 0;
																	local v118;
																	while true do
																		if (v117 == 0) then
																			v118 = 0 + 0;
																			while true do
																				if (v118 ~= 0) then
																				else
																					local v214 = 0 - 0;
																					while true do
																						if (v214 ~= (418 - (246 + 172))) then
																						else
																							v47 = {};
																							v48 = {v45,v46,nil,v47};
																							v214 = 1;
																						end
																						if (v214 ~= 1) then
																						else
																							v118 = 1 - 0;
																							break;
																						end
																					end
																				end
																				if (v118 == (133 - (7 + 125))) then
																					v113 = 1 + 1;
																					break;
																				end
																			end
																			break;
																		end
																	end
																end
																if (v113 ~= (1894 - (367 + 1525))) then
																else
																	v44 = 1;
																	break;
																end
																if (v113 == 0) then
																	local v119 = 0;
																	local v120;
																	while true do
																		if (v119 == (0 - 0)) then
																			v120 = 0;
																			while true do
																				if (v120 == (1 + 0)) then
																					v113 = 1 - 0;
																					break;
																				end
																				if (v120 ~= 0) then
																				else
																					local v215 = 0;
																					while true do
																						if (v215 ~= (124 - (120 + 4))) then
																						else
																							v45 = {};
																							v46 = {};
																							v215 = 1;
																						end
																						if (v215 == 1) then
																							v120 = 1532 - (726 + 805);
																							break;
																						end
																					end
																				end
																			end
																			break;
																		end
																	end
																end
															end
														end
														break;
													end
												end
												break;
											end
										end
									end
									break;
								end
								if (v43 == 0) then
									local v99 = 0;
									local v100;
									while true do
										if (v99 == (1679 - (1654 + 25))) then
											v100 = 0 + 0;
											while true do
												if (v100 == 0) then
													v44 = 0 - 0;
													v45 = nil;
													v100 = 2 - 1;
												end
												if ((1 + 0) ~= v100) then
												else
													v43 = 1;
													break;
												end
											end
											break;
										end
									end
								end
							end
							break;
						end
						if (v42 ~= 2) then
						else
							local v80 = 0 - 0;
							while true do
								if (v80 == 1) then
									v42 = 3;
									break;
								end
								if (v80 == (809 - (717 + 92))) then
									v47 = nil;
									v48 = nil;
									v80 = 1;
								end
							end
						end
					end
				end
				v30 = nil;
				v18 = 7;
			end
			if (7 == v18) then
				function v30(v31, v32, v33)
					local v51 = v31[1];
					local v52 = v31[2];
					local v53 = v31[3];
					return function(...)
						local v69 = 1;
						local v70 = -1;
						local v71 = {...};
						local v72 = v12("#", ...) - 1;
						local function v73()
							local v81 = v51;
							local v82 = v52;
							local v83 = v53;
							local v84 = v28;
							local v85 = {};
							local v86 = {};
							local v87 = {};
							for v93 = 584 - (395 + 189), v72 do
								if ((v93 >= v83) or ((5080 - 1820) <= (2230 - (665 + 770)))) then
									v85[v93 - v83] = v71[v93 + 1];
								else
									v87[v93] = v71[v93 + 1 + (0 - 0)];
								end
							end
							local v88 = (v72 - v83) + 1 + 0 + 0;
							local v89;
							local v90;
							while true do
								local v94 = 1959 - (388 + 492 + 1079);
								local v95;
								while true do
									if ((v94 == (1077 - (754 + 323))) or ((5664 - 4094) >= 3888)) then
										v95 = 0 + 0;
										while true do
											if ((v95 == (1585 - (561 + (2700 - (978 + 699))))) or ((7871 - (1466 + 2930)) <= 109)) then
												if (((6204 - (936 + 3932)) <= (6340 - 4234)) and (v90 <= (1076 - (633 + 425)))) then
													if ((v90 <= (13 - 5)) or (2212 == (4094 - 2424))) then
														if ((v90 <= (1224 - (594 + 627))) or ((8093 - 3469) == (4142 - (263 + 1964)))) then
															if (((2092 + 802) >= 390) and (v90 <= (1 + 0))) then
																if ((v90 == (0 + 0)) or ((5993 - ((1977 - (75 + 614)) + 640)) <= (879 + 2575))) then
																	for v174 = v89[1703 - (1584 + 117)], v89[872 - (113 + 756)] do
																		v87[v174] = nil;
																	end
																elseif (((1776 + 713) > (163 + 2098)) and v87[v89[4 - 2]]) then
																	v69 = v69 + (1 - 0);
																else
																	v69 = v89[3];
																end
															elseif (((933 + 111) <= (2291 - ((1073 - (661 + 205)) + 670))) and (v90 == 2)) then
																v87[v89[2 + 0]] = v87[v89[8 - 5]];
															else
																v87[v89[2 - 0]] = v87[v89[6 - (4 - 1)]][v89[1486 - (495 + 987)]];
															end
														elseif (((708 + 3395) > (846 - 457)) and (v90 <= (1854 - (748 + 1101)))) then
															if ((v90 == (9 - 5)) or ((2267 + 147) > 3889)) then
																v87[v89[1 + 1]] = v33[v89[458 - (432 + 23)]];
															else
																local v128 = 1478 - (1157 + 321);
																local v129;
																local v130;
																local v131;
																local v132;
																while true do
																	if ((v128 == (2 + 0)) or ((1422 - (1353 + 32)) == (1372 - (1028 + 249)))) then
																		for v229 = v129, v70 do
																			local v230 = 0;
																			local v231;
																			while true do
																				if ((v230 == (924 - (335 + 589))) or ((1920 + 2824) < 519)) then
																					v231 = 0 - 0;
																					while true do
																						if (((516 + 1224 + 1467) < (5963 - (185 + 837))) and (((0 + 0) - 0) == v231)) then
																							v132 = v132 + 1 + 0;
																							v87[v229] = v130[v132];
																							break;
																						end
																					end
																					break;
																				end
																			end
																		end
																		break;
																	end
																	if ((v128 == (3 - 2)) or ((3592 - 1732) >= 2747)) then
																		v70 = (v131 + v129) - (2 - 1);
																		v132 = 0;
																		v128 = 2 - (114 - (35 + 79));
																	end
																	if ((v128 == (0 - 0)) or ((3229 - (376 + 1354)) <= (1687 - (16 + 1017)))) then
																		local v216 = 0;
																		while true do
																			if (((642 + 4057) >= (4603 - (140 + 69))) and (v216 == 1)) then
																				v128 = 3 - 2;
																				break;
																			end
																			if ((v216 == (0 + 0)) or (3378 == (6133 - (934 + 209)))) then
																				v129 = v89[1 + 1];
																				v130, v131 = v84(v87[v129](v87[v129 + 1 + 0]));
																				v216 = 1 - 0;
																			end
																		end
																	end
																end
															end
														elseif (((1069 - 669) < (7099 - 3020)) and (v90 <= (1629 - (1510 + 113)))) then
															local v133 = 0 + (1079 - (715 + 364));
															local v134;
															local v135;
															local v136;
															local v137;
															while true do
																if ((644 >= (115 + 505)) and (v133 == (536 - ((1210 - 753) + 77)))) then
																	while true do
																		if ((v134 == 1) or (((7183 - (1338 + 89)) - (1230 + 768)) >= (2618 + 2064))) then
																			v137 = 113 - (41 + 72);
																			for v261 = v135, v89[10 - 6] do
																				local v262 = 0 - 0;
																				local v263;
																				while true do
																					if ((v262 == (0 - 0)) or ((2273 + 1592) <= (932 + 1411 + 495))) then
																						v263 = 0 - 0;
																						while true do
																							if (((1774 - (95 + 1679)) == v263) or (2996 > (1328 + 1886))) then
																								v137 = v137 + (1 - 0);
																								v87[v261] = v136[v137];
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																			break;
																		end
																		if ((v134 == 0) or ((3210 - (63 + 506)) > (23165 - (62097 - 43729)))) then
																			local v239 = 1956 - (1906 + 35 + 15);
																			local v240;
																			while true do
																				if ((v239 == (0 + 0)) or ((887 + 106) == ((3121 + 1633) - (740 + 997)))) then
																					v240 = 0 + 0;
																					while true do
																						if (((2995 - ((843 - 657) + 186)) == 2623) and (v240 == (0 + 0 + 0))) then
																							local v296 = 0 - 0;
																							while true do
																								if ((v296 == (1 + 0)) or (((2103 - (97 + 1293)) + 705) >= (15138 - 11158))) then
																									v240 = 3 - 2;
																									break;
																								end
																								if ((v296 == 0) or ((6587 - 4387) > (10118 - 6638))) then
																									v135 = v89[2];
																									v136 = {v87[v135](v87[v135 + 1])};
																									v296 = 1;
																								end
																							end
																						end
																						if ((v240 == (4 - 3)) or ((534 + 573) <= (2830 - (1515 + 372)))) then
																							v134 = 2 - (1 + 0);
																							break;
																						end
																					end
																					break;
																				end
																			end
																		end
																	end
																	break;
																end
																if (((3893 - (318 + 529)) >= (1361 - (605 + 606))) and (v133 == (430 - (287 + 143)))) then
																	local v217 = (410 + 1565) - (446 + 1529);
																	while true do
																		if (((1411 + 2456) <= ((9264 - (392 + 127)) - (5645 - 1719))) and (v217 == 1)) then
																			v133 = 1 + 0;
																			break;
																		end
																		if ((v217 == (1868 - (947 + 6 + 915))) or (958 >= (14134 - 9357))) then
																			v134 = 1279 - (260 + 1019);
																			v135 = nil;
																			v217 = 2 - 1;
																		end
																	end
																end
																if (((2663 + 649) >= (12739 - 9595)) and (v133 == (1 + 0))) then
																	local v218 = 0;
																	while true do
																		if ((v218 == (889 - (102 + 786))) or ((1252 + 2137) > (1013 + 2842))) then
																			v133 = 7 - 5;
																			break;
																		end
																		if (((4779 - (309 + 180)) >= (3631 - (35 + 595 + 369))) and (v218 == (0 + 0))) then
																			v136 = nil;
																			v137 = nil;
																			v218 = 1;
																		end
																	end
																end
															end
														elseif ((v90 > (1236 - (596 + 633))) or (((1247 + 4151) - 3696) > ((1393 - (828 + 42)) + 3266))) then
															v87[v89[2 + (1566 - (13 + 1553))]][v89[1 + 2]] = v87[v89[1950 - ((2940 - 1298) + 304)]];
														else
															local v182 = 0;
															local v183;
															local v184;
															while true do
																if ((v182 == ((5 - 2) - 2)) or ((3327 - (32 + (1786 - (80 + 1044)))) < (1825 - (222 + 525)))) then
																	while true do
																		if (((7567 - 5654) <= (6027 - 2735)) and ((0 + 0) == v183)) then
																			v184 = v89[1277 - (1232 + 43)];
																			v87[v184] = v87[v184](v87[v184 + (1 - 0)]);
																			break;
																		end
																	end
																	break;
																end
																if ((3516 == (7336 - 3820)) and (v182 == (0 - 0))) then
																	v183 = 0 - (0 - 0);
																	v184 = nil;
																	v182 = 1956 - (66 + 1889);
																end
															end
														end
													elseif ((v90 <= 13) or (3471 == (1274 - 584))) then
														if (((449 + 741) == (2553 - 1363)) and (v90 <= (14 - 4))) then
															if (((14116 - (28178 - 18456)) > (1360 + 513)) and (v90 > ((1509 - (194 + 1312)) + (16 - 10)))) then
																if ((v89[(24 - (6 + 17)) + 1] == v87[v89[1265 - (67 + 1194)]]) or ((4727 - (1010 + 618)) == 270)) then
																	v69 = v69 + (451 - (382 + 68));
																else
																	v69 = v89[8 - 5];
																end
															else
																v87[v89[2 - 0]][v89[3]] = v89[744 - (17 + 723)];
															end
														elseif ((v90 <= (7 + 4)) or ((8927 - 6133) < (1812 - (803 + 77)))) then
															local v140 = v89[2 + 0 + 0];
															local v141 = v89[16 - 12];
															local v142 = v140 + 2 + 0;
															local v143 = {v87[v140](v87[v140 + 1], v87[v142])};
															for v176 = 1 + 0, v141 do
																v87[v142 + v176] = v143[v176];
															end
															local v144 = v143[1];
															if (v144 or ((82 + 396) >= (1194 + 470))) then
																local v186 = 0;
																local v187;
																local v188;
																while true do
																	if ((v186 == 1) or ((9735 - 7165) == (297 + 1228))) then
																		while true do
																			if ((v187 == ((0 - 0) - 0)) or ((2492 - ((989 - (801 + 75)) + 84 + 283)) >= (5759 - (743 + 264)))) then
																				v188 = 0;
																				while true do
																					if (((2349 - (273 + 1588)) <= (448 + 963)) and (0 == v188)) then
																						v87[v142] = v144;
																						v69 = v89[796 - ((1149 - 746) + 390)];
																						break;
																					end
																				end
																				break;
																			end
																		end
																		break;
																	end
																	if (((1141 + 666) >= (8 + 59)) and (v186 == 0)) then
																		v187 = (1510 - (312 + 612)) - (395 + 191);
																		v188 = nil;
																		v186 = 1;
																	end
																end
															else
																v69 = v69 + (2 - 1);
															end
														elseif ((3905 < (5512 - (752 + 321 + 56))) and (v90 == (8 + 4))) then
															do
																return v87[v89[766 - (135 + 629)]];
															end
														else
															local v189 = 0 + 0;
															local v190;
															local v191;
															local v192;
															while true do
																if ((v189 == 0) or ((4332 - 2299) <= (833 - (16 + 23)))) then
																	v190 = v82[v89[9 - 6]];
																	v191 = nil;
																	v189 = 1 - 0;
																end
																if ((v189 == (2 + 0)) or (2500 < (5971 - 3975))) then
																	for v241 = 1, v89[2 + 2] do
																		local v242 = 1984 - (4 + 1980);
																		local v243;
																		local v244;
																		while true do
																			if (((3875 + 8) >= (3529 - 2258)) and (v242 == (0 - 0))) then
																				v243 = (761 - (712 + 49)) - 0;
																				v244 = nil;
																				v242 = 1;
																			end
																			if ((((2 - 1) + 0) == v242) or ((3689 - (25 + 223)) > (12609 - 7699))) then
																				while true do
																					if ((3861 >= (4669 - (756 + 272))) and (v243 == (2 - 1))) then
																						if ((2985 == (4216 - (812 + 419))) and (v244[569 - (364 + 204)] == (1 + 1))) then
																							v192[v241 - (906 - ((1543 - (136 + 1083)) + 581))] = {v87,v244[981 - (754 + 224)]};
																						else
																							v192[v241 - (2 - 1)] = {v32,v244[6 - 3]};
																						end
																						v86[#v86 + ((768 + 313) - (538 + 333 + 209))] = v192;
																						break;
																					end
																					if ((v243 == 0) or ((2519 - 449) == (1090 + 3059))) then
																						local v298 = 322 - (217 + 105);
																						while true do
																							if ((v298 == (0 - 0)) or ((3812 - (236 + (1320 - (670 + 214)))) > 3907)) then
																								v69 = v69 + (3 - 2);
																								v244 = v81[v69];
																								v298 = 1;
																							end
																							if (((282 + 3260) >= ((6106 - (850 + 98)) - 2829)) and (v298 == (1 + 0))) then
																								v243 = 1111 - (386 + 724);
																								break;
																							end
																						end
																					end
																				end
																				break;
																			end
																		end
																	end
																	v87[v89[4 - 2]] = v30(v190, v191, v33);
																	break;
																end
																if (((768 - 490) <= 999) and (v189 == (1 - 0))) then
																	v192 = {};
																	v191 = v10({}, {__index=function(v245, v246)
																		local v264 = 0 + 0;
																		local v265;
																		local v266;
																		while true do
																			if (((1529 + 1516) > (3559 - (186 + (3360 - (66 + 1663))))) and (v264 == (0 - 0))) then
																				v265 = 0 - 0;
																				v266 = nil;
																				v264 = 1685 - (602 + 1082);
																			end
																			if (((14387 - 10558) < (13700 - (8124 + 1102))) and (v264 == (1 + 0))) then
																				while true do
																					if (((3457 - (357 + 199)) <= (1967 + 2808)) and (0 == v265)) then
																						local v303 = 0 - (0 + 0);
																						while true do
																							if (((18357 - 13698) > 2174) and (v303 == (1760 - (79 + 1681)))) then
																								v266 = v192[v246];
																								return v266[1][v266[2]];
																							end
																						end
																					end
																				end
																				break;
																			end
																		end
																	end,__newindex=function(v247, v248, v249)
																		local v267 = 0 + 0;
																		local v268;
																		local v269;
																		local v270;
																		while true do
																			if (((845 + 2470) < (4752 - (85 + (1046 - (274 + 678))))) and (v267 == (0 + 0))) then
																				v268 = 0 - 0;
																				v269 = nil;
																				v267 = (7 - 4) - 2;
																			end
																			if ((v267 == (1965 - (178 + 1786))) or ((14921 - 10723) < (3303 - 2252))) then
																				v270 = nil;
																				while true do
																					if ((4958 > (1209 + 70)) and (v268 == (0 - 0))) then
																						local v304 = 0 - 0;
																						while true do
																							if (((1257 + 451) >= 505) and (v304 == (894 - (210 + 684)))) then
																								v269 = 1609 - (654 + (2136 - (261 + 920)));
																								v270 = nil;
																								v304 = 1 + 0;
																							end
																							if (((1 + 0) == v304) or ((1688 - 399) >= (1647 + 2679))) then
																								v268 = 357 - (338 + 18);
																								break;
																							end
																						end
																					end
																					if (((7038 - 3997) > ((696 + 96) - 359)) and (v268 == (178 - (20 + 157)))) then
																						while true do
																							if (((70 + 110) < (694 - 379)) and (v269 == 0)) then
																								v270 = v192[v248];
																								v270[3 - 2][v270[4 - 2]] = v249;
																								break;
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																		end
																	end});
																	v189 = 2;
																end
															end
														end
													elseif ((v90 <= (6 + 9)) or ((7210 - 4078) < (1429 + (985 - 508)))) then
														if (((2741 - (1255 + 420)) < (5286 - (27 + 1013))) and (v90 > (1868 - (684 + 1170)))) then
															if (not v87[v89[(1676 - (387 + 41)) - (1151 + 95)]] or ((1260 + 863) >= (4329 - (597 + 229)))) then
																v69 = v69 + (202 - (101 + 100));
															else
																v69 = v89[1 + 0 + 2];
															end
														else
															v32[v89[1 + 2]] = v87[v89[(3957 - 2109) - (1320 + 526)]];
														end
													elseif ((4349 == (13228 - 8879)) and (v90 <= (689 - (506 + 167)))) then
														v87[v89[2]] = v30(v82[v89[(14 - 6) - 5]], nil, v33);
													elseif (((1841 + 2546) == ((8828 + 1629) - 6070)) and (v90 > (922 - (90 + 119 + 696)))) then
														if (((3131 - (284 + 530)) > (2043 - (1133 + 69))) and (v87[v89[2]] == v89[(49 - 35) - 10])) then
															v69 = v69 + 1;
														else
															v69 = v89[3 + 0];
														end
													else
														v87[v89[1775 - (311 + 1462)]] = v32[v89[780 - (559 + (708 - 490))]];
													end
												elseif (((1644 - (10 + 42)) <= 4342) and (v90 <= (1 + (1568 - (1091 + 451))))) then
													if ((v90 <= (1373 - (1026 + (711 - 386)))) or (4984 < (1039 - 545))) then
														if (((159 + 79) < (209 + 56)) and (v90 <= (88 - 68))) then
															if (((13457 - 8548) > (4480 - 1077)) and (v90 == (86 - 67))) then
																v69 = v89[445 - (165 + (827 - 550))];
															elseif (((190 + 904 + 2369) < 4639) and (v87[v89[320 - (135 + 183)]] ~= v89[(1250 - (1165 + 80)) - (787 - (219 + 567))])) then
																v69 = v69 + (1186 - (1114 + 71));
															else
																v69 = v89[1486 - (394 + 1089)];
															end
														elseif ((v90 > ((56 - 19) - 16)) or ((1108 + 567) > (6008 - 3604))) then
															v87[v89[4 - 2]] = v89[3] ~= (972 - (23 + 949));
														else
															v87[v89[5 - (14 - 11)]] = v89[3 + 0];
														end
													elseif (((3477 - (1576 + 381)) <= (1499 + 215)) and (v90 <= (6 + 18))) then
														if (((4639 - ((1671 - (812 + 828)) + 1508)) == (4001 - (251 + 650))) and (v90 > 23)) then
															local v152 = 0 + 0;
															local v153;
															local v154;
															while true do
																if (((1172 + 323) <= (3003 + 668)) and (v152 == (296 - (47 + 249)))) then
																	v153 = 0;
																	v154 = nil;
																	v152 = 4 - 3;
																end
																if (((7419 - 2452) >= (16613 - 11768)) and (v152 == (1 + 0))) then
																	while true do
																		if ((((6014 - 3930) - 865) < (6014 - 1581)) and (v153 == (0 + 0))) then
																			v154 = v89[485 - ((504 - 308) + 287)];
																			v87[v154](v13(v87, v154 + 1 + 0, v70));
																			break;
																		end
																	end
																	break;
																end
															end
														else
															local v155 = 0 - 0;
															local v156;
															local v157;
															while true do
																if ((((2830 + 993) - 2934) == (20 + 869)) and (0 == v155)) then
																	v156 = v89[2];
																	v157 = v87[v89[7 - 4]];
																	v155 = (2760 - 1469) - (810 + 480);
																end
																if ((v155 == 1) or ((642 - (215 + (266 - 123))) > (4071 - 1655))) then
																	v87[v156 + (798 - (698 + 99))] = v157;
																	v87[v156] = v157[v89[5 - 1]];
																	break;
																end
															end
														end
													elseif (((12715 - 9294) <= (17136 - 13665)) and (v90 <= (993 - (612 + 356)))) then
														local v158 = 0 - 0;
														local v159;
														local v160;
														local v161;
														local v162;
														local v163;
														while true do
															if ((v158 == (1469 - ((1663 - (1157 + 265)) + 1226))) or (3532 <= (3459 - (958 + 952)))) then
																v163 = nil;
																while true do
																	if ((v159 == 2) or ((7584 - 5111) == (1819 - 639))) then
																		while true do
																			if (((1758 - (315 + 195)) == (2480 - (173 + 1059))) and (v160 == (1 + 0))) then
																				v163 = 1826 - ((7705 - 6156) + 165 + 112);
																				for v289 = v161, v89[2 + 2] do
																					local v290 = 1524 - (746 + 778);
																					while true do
																						if ((0 == v290) or ((4346 - 1729) >= (4592 - (443 + 318)))) then
																							v163 = v163 + (728 - (501 + 226));
																							v87[v289] = v162[v163];
																							break;
																						end
																					end
																				end
																				break;
																			end
																			if ((2649 > (946 - (24 + (801 - (572 + 209))))) and (v160 == 0)) then
																				local v280 = 0 - 0;
																				local v281;
																				while true do
																					if ((((5750 - (312 + 527)) - (405 + 451)) > (717 + 2716)) and (v280 == 0)) then
																						v281 = 196 - (147 + 49);
																						while true do
																							if (((1357 + 38) < (2501 - (125 + 115))) and (1 == v281)) then
																								v160 = 1 + 0;
																								break;
																							end
																							if ((v281 == (0 + 0)) or (((7133 - (1051 + 530)) - (207 + 1161)) == (2916 - (1282 + 539)))) then
																								v161 = v89[2];
																								v162 = {v87[v161](v13(v87, v161 + 1, v70))};
																								v281 = 547 - (406 + 140);
																							end
																						end
																						break;
																					end
																				end
																			end
																		end
																		break;
																	end
																	if ((1650 <= (3163 + (2562 - 1838))) and (v159 == (3 - 2))) then
																		v162 = nil;
																		v163 = nil;
																		v159 = 3 - 1;
																	end
																	if (((1512 + 1728) >= 2677) and (v159 == 0)) then
																		local v251 = 0;
																		while true do
																			if ((v251 == 0) or ((1196 + 96) > (1677 + 2167))) then
																				v160 = 0 + 0;
																				v161 = nil;
																				v251 = 1 + 0;
																			end
																			if (((4230 - 1064) > ((2562 - (464 + 432)) - 569)) and (v251 == (2 - 1))) then
																				v159 = 2 - 1;
																				break;
																			end
																		end
																	end
																end
																break;
															end
															if ((171 <= (2587 - 942)) and ((0 + 0) == v158)) then
																v159 = 0;
																v160 = nil;
																v158 = 1 + 0;
															end
															if ((v158 == ((2217 - 1330) - (245 + 641))) or ((3046 + 144) < 1655)) then
																v161 = nil;
																v162 = nil;
																v158 = 2;
															end
														end
													elseif ((v90 > (1229 - (378 + 825))) or ((4121 + 609) < (362 + 10))) then
														local v197 = 447 - (49 + 398);
														local v198;
														local v199;
														local v200;
														while true do
															if ((v197 == ((1074 - (100 + 974)) - 0)) or ((5965 - (164 + 1064)) < 2031)) then
																v198 = (842 - (490 + 352)) + 0;
																v199 = nil;
																v197 = 1351 - (988 + 362);
															end
															if (((14470 - 9715) >= (2317 - (343 + 364))) and (1 == v197)) then
																v200 = nil;
																while true do
																	if ((1095 == (465 + 630)) and (v198 == (1995 - (672 + 1322)))) then
																		while true do
																			if (((1447 + 487) == (1226 + 708)) and (v199 == 0)) then
																				v200 = v89[2];
																				v87[v200](v87[v200 + 1]);
																				break;
																			end
																		end
																		break;
																	end
																	if ((v198 == (0 + 0)) or ((7 + (2793 - 1613)) >= (3190 + 1146))) then
																		local v277 = 0;
																		while true do
																			if ((v277 == (1 - 0)) or ((609 - (377 + 54)) > (2835 - (174 + 33)))) then
																				v198 = 1 + 0;
																				break;
																			end
																			if (((0 - 0) == v277) or ((408 + 2758) >= (1594 + 2869))) then
																				v199 = 0 - 0;
																				v200 = nil;
																				v277 = 1 + (0 - 0);
																			end
																		end
																	end
																end
																break;
															end
														end
													else
														local v201 = 787 - (446 + 341);
														local v202;
														local v203;
														while true do
															if ((v201 == (179 - (29 + 150))) or (((198 + 842) - 371) > (5740 - (1124 + 91)))) then
																v202 = 0 + 0;
																v203 = nil;
																v201 = 1 + 0;
															end
															if (((716 + 1028) > (1577 - (301 + 442))) and (v201 == 1)) then
																while true do
																	if ((2425 <= (3535 + 738)) and (v202 == 0)) then
																		v203 = v89[952 - (493 + 457)];
																		v87[v203](v13(v87, v203 + ((295 - (10 + 282)) - 2), v89[10 - 7]));
																		break;
																	end
																end
																break;
															end
														end
													end
												elseif ((((530 + 2753) - (533 + 912)) <= 4959) and (v90 <= (158 - 126))) then
													if ((((15343 - 10890) + (2296 - (341 + 1563))) > (5876 - 3602)) and (v90 <= 29)) then
														if (((6055 - (15 + 1671)) > (894 + 2120)) and (v90 == 28)) then
															v87[v89[1228 - (22 + 28 + 1176)]]();
														else
															local v164 = 1976 - (1618 + 358);
															local v165;
															while true do
																if ((v164 == 0) or ((11483 - 8520) < (645 + 2203))) then
																	v165 = v89[2 + 0];
																	do
																		return v13(v87, v165, v165 + v89[3]);
																	end
																	break;
																end
															end
														end
													elseif ((v90 <= (77 - (27 + 20))) or ((2697 - 1656) > (3104 - 1262))) then
														local v166 = (481 + 1498) - (608 + 1371);
														local v167;
														local v168;
														while true do
															if ((v166 == (1 + 0)) or ((5017 - (1265 + 104)) == (11868 - 9123))) then
																for v233 = v167 + 1 + 0, v89[3 + 1] do
																	v168 = v168 .. v87[v233];
																end
																v87[v89[2 + 0]] = v168;
																break;
															end
															if ((v166 == (0 - 0)) or ((450 + 160 + 182) > (3948 - (209 + 1517)))) then
																local v226 = 0 - 0;
																while true do
																	if ((v226 == 0) or ((5354 - 3367) < (867 - 276))) then
																		v167 = v89[8 - 5];
																		v168 = v87[v167];
																		v226 = 460 - (190 + 269);
																	end
																	if (((2960 - 1874) < 2364) and (v226 == (1 + 0))) then
																		v166 = 1179 - (1076 + 102);
																		break;
																	end
																end
															end
														end
													elseif ((v90 == (79 - 48)) or (((8537 - 3403) - 1934) < (2578 - (188 + 1398)))) then
														v87[v89[7 - (66 - (10 + 51))]] = v87[v89[816 - (467 + 346)]][v87[v89[5 - 1]]];
													else
														v33[v89[3]] = v87[v89[2]];
													end
												elseif ((v90 <= (108 - (8 + 66))) or (((5689 - (5 + 10)) - (1438 + 32)) >= ((4603 - (463 + 1391)) + 1508))) then
													if (((11254 - 7527) >= ((6081 - (1566 + 31)) - (1037 + 165))) and (v90 > (9 + 24))) then
														do
															return;
														end
													else
														v87[v89[2]] = {};
													end
												elseif (((3456 + 864) >= (2174 + 1234)) and (v90 <= (1013 - (740 + 238)))) then
													local v170 = 221 - (185 + 29 + 7);
													local v171;
													local v172;
													local v173;
													while true do
														if ((v170 == (821 - (22 + 798))) or ((4219 - (855 + 148)) < (396 + 298))) then
															v173 = nil;
															while true do
																if ((v171 == (0 + 0)) or ((1729 + 1203) > 4060)) then
																	local v254 = 0 - 0;
																	while true do
																		if ((4841 > (25 + 2358)) and (v254 == (1772 - (1679 + 93)))) then
																			v172 = v89[(1597 - (1169 + 425)) - 1];
																			v173 = {};
																			v254 = 1;
																		end
																		if (((2131 - 1598) >= (769 - 383)) and ((475 - (71 + 403)) == v254)) then
																			v171 = 1 - 0;
																			break;
																		end
																	end
																end
																if (((2210 - (210 + 256)) <= ((120 + 5228) - (315 + 874))) and (v171 == (2 - 1))) then
																	for v271 = 1 + 0, #v86 do
																		local v272 = 0 + 0;
																		local v273;
																		local v274;
																		while true do
																			if (((1556 - (2365 - (1620 + 15))) <= (3823 - (12 + 1))) and (v272 == ((1 - 0) + 0))) then
																				while true do
																					if ((4471 > 2043) and (v273 == (0 - 0))) then
																						v274 = v86[v271];
																						for v310 = 0 + 0, #v274 do
																							local v311 = 0 - (266 - (161 + 105));
																							local v312;
																							local v313;
																							local v314;
																							local v315;
																							while true do
																								if (((1 + 0) == v311) or (1750 >= (8289 - 5940))) then
																									v314 = nil;
																									v315 = nil;
																									v311 = 7 - 5;
																								end
																								if (((8736 - 3795) >= ((8940 - 7063) - (100 + 716))) and (v311 == (0 - 0))) then
																									v312 = 0;
																									v313 = nil;
																									v311 = 2 - 1;
																								end
																								if (((4601 - (95 + 496)) >= (565 - 286)) and (v311 == (2 + 0))) then
																									while true do
																										if ((v312 == (1 + 0)) or ((4562 - 2682) >= 3259)) then
																											v315 = v313[2 - 0];
																											if (((3803 - (443 + 855)) <= 4973) and (v314 == v87) and (v315 >= v172)) then
																												local v332 = 0 + 0;
																												local v333;
																												while true do
																													if ((v332 == 0) or (2716 >= (5343 - (814 + 10)))) then
																														v333 = 0;
																														while true do
																															if (((0 + 0) == v333) or ((490 + (6554 - 4445)) >= 4303)) then
																																v173[v315] = v314[v315];
																																v313[276 - (203 + 72)] = v173;
																																break;
																															end
																														end
																														break;
																													end
																												end
																											end
																											break;
																										end
																										if ((v312 == (0 - 0)) or ((5619 - ((3035 - (1431 + 274)) + 440)) <= (63 + (1972 - (149 + 131))))) then
																											local v331 = 0;
																											while true do
																												if ((740 >= 390) and (v331 == 0)) then
																													v313 = v274[v310];
																													v314 = v313[1 + 0];
																													v331 = 1 + 0;
																												end
																												if ((((7645 - 2199) - 4345) < (4309 - (5 + 19 + 36))) and (v331 == (1 - 0))) then
																													v312 = 1 + 0;
																													break;
																												end
																											end
																										end
																									end
																									break;
																								end
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																			if ((689 == (1440 - (344 + 407))) and (v272 == 0)) then
																				v273 = (3958 - (585 + 1391)) - (1057 + 925);
																				v274 = nil;
																				v272 = 1 - 0;
																			end
																		end
																	end
																	break;
																end
															end
															break;
														end
														if ((4682 >= (814 - 256)) and (v170 == (0 - (0 - 0)))) then
															v171 = 0 + 0;
															v172 = nil;
															v170 = (7 - 5) - 1;
														end
													end
												elseif ((v90 > (53 - 17)) or (((1154 + 1579) - 1993) == (2612 - (1239 + 388)))) then
													if ((4023 > (6561 - 4853)) and (v87[v89[2]] == v87[v89[10 - 6]])) then
														v69 = v69 + (88 - (78 + 9));
													else
														v69 = v89[(4 - 3) + 2];
													end
												else
													local v208 = 0 + 0;
													local v209;
													local v210;
													local v211;
													while true do
														if ((((1551 + 205) - (1010 + 662)) <= (4201 - (175 + 288))) and (v208 == (0 + 0))) then
															v209 = 1341 - (355 + 986);
															v210 = nil;
															v208 = 1502 - (343 + 1158);
														end
														if ((740 <= (685 + 2416)) and (v208 == ((4 + 0) - 3))) then
															v211 = nil;
															while true do
																if ((v209 == (309 - (74 + 234))) or ((629 + 25 + 1650) > (3084 - (198 + 343)))) then
																	while true do
																		if (((159 + 241) < 1062) and (0 == v210)) then
																			v211 = v89[2 + 0];
																			v87[v211] = v87[v211](v13(v87, v211 + 1 + 0, v89[2 + 1]));
																			break;
																		end
																	end
																	break;
																end
																if (((5710 - (194 + (2540 - (397 + 934)))) < (252 + 4659)) and (v209 == (0 - 0))) then
																	v210 = (2323 - (388 + 188)) - (774 + 973);
																	v211 = nil;
																	v209 = 138 - (44 + 93);
																end
															end
															break;
														end
													end
												end
												v69 = v69 + 1 + 0;
												break;
											end
											if (((0 - 0) == v95) or ((5670 - (1314 + 577)) < (904 - 314))) then
												local v108 = 0 - 0;
												while true do
													if ((v108 == (1 + 0)) or ((719 - ((1055 - 661) + 13)) > ((3997 + 1628) - (285 + 1573)))) then
														v95 = 1 + 0;
														break;
													end
													if (((110 + 2326) == 2436) and (((0 - 0) + 0) == v108)) then
														v89 = v81[v69];
														v90 = v89[1 + 0];
														v108 = 1;
													end
												end
											end
										end
										break;
									end
								end
							end
						end
						A, B = v28(v11(v73));
						if not A[1] then
							local v91 = v31[4][v69] or "?";
							error("Script error at [" .. v91 .. "]:" .. A[2]);
						else
							return v13(A, 2, B);
						end
					end;
				end
				return v30(v29(), {}, v17)(...);
			end
			if (0 == v18) then
				v19 = 1;
				v20 = nil;
				v16 = v4(v3(v16, 5), "..", function(v34)
					if (v1(v34, 2) == 79) then
						v20 = v0(v3(v34, 1, 1));
						return "";
					else
						local v74 = v2(v0(v34, 16));
						if v20 then
							local v92 = v5(v74, v20);
							v20 = nil;
							return v92;
						else
							return v74;
						end
					end
				end);
				v18 = 1;
			end
			if (v18 == 5) then
				v27 = v24;
				v28 = nil;
				function v28(...)
					return {...}, v12("#", ...);
				end
				v18 = 6;
			end
			if (v18 == 1) then
				v21 = nil;
				function v21(v35, v36, v37)
					if v37 then
						local v75 = (v35 / (2 ^ (v36 - (1 - 0)))) % (2 ^ (((v37 - (1 - 0)) - (v36 - (2 - 1))) + 1));
						return v75 - (v75 % (1550 - (486 + (1566 - (378 + 125)))));
					else
						local v76 = (758 - (370 + 386)) ^ (v36 - (823 - (164 + 658)));
						return (((v35 % (v76 + v76)) >= v76) and (1877 - (1625 + 251))) or (1184 - ((3211 - 2189) + (1023 - (712 + 149))));
					end
				end
				v22 = nil;
				v18 = 2;
			end
			if (v18 == 3) then
				v24 = nil;
				function v24()
					local v54, v55, v56, v57 = v1(v16, v19, v19 + 2 + 1);
					v19 = v19 + 2 + 2;
					return (v57 * 16777216) + (v56 * (67120 - (806 + (1101 - (111 + 212))))) + (v55 * (2111 - (1466 + 389))) + v54;
				end
				v25 = nil;
				v18 = 4;
			end
			if (v18 == 4) then
				function v25()
					local v58 = 0 - 0;
					local v59;
					local v60;
					local v61;
					local v62;
					local v63;
					local v64;
					while true do
						if (v58 == ((2020 - (352 + 730)) - (399 + 536))) then
							if (v63 == (0 - 0)) then
								if (v62 == (0 - 0)) then
									return v64 * (0 + 0);
								else
									v63 = 1;
									v61 = 0;
								end
							elseif (v63 == (9768 - 7721)) then
								return ((v62 == 0) and (v64 * (1 / (0 - 0)))) or (v64 * NaN);
							end
							return v8(v64, v63 - 1023) * (v61 + (v62 / ((2 + 0) ^ (1548 - (96 + 1400)))));
						end
						if (v58 == (1580 - (419 + 1161))) then
							v59 = v24();
							v60 = v24();
							v58 = 1 - 0;
						end
						if ((729 - (439 + 61 + 227)) == v58) then
							v63 = v21(v60, 20 + 1, 890 - (237 + 622));
							v64 = ((v21(v60, 4 + 21 + 7) == (1 + 0)) and -(1 + 0)) or (655 - (133 + 521));
							v58 = 1 + 2;
						end
						if (v58 == 1) then
							v61 = 3 - (2 + 0);
							v62 = (v21(v60, 2 - (1681 - (399 + 1281)), 147 - (105 + 22)) * (2 ^ (1 + 31))) + v59;
							v58 = 2;
						end
					end
				end
				v26 = nil;
				function v26(v38)
					local v65;
					if not v38 then
						local v77 = 0 - 0;
						while true do
							if ((1597 - (556 + 185 + 856)) == v77) then
								v38 = v24();
								if (v38 == (1879 - (315 + 1564))) then
									return "";
								end
								break;
							end
						end
					end
					v65 = v3(v16, v19, (v19 + v38) - 1);
					v19 = v19 + v38;
					local v66 = {};
					for v67 = 486 - (35 + 450), #v65 do
						v66[v67] = v2(v1(v3(v65, v67, v67)));
					end
					return v6(v66);
				end
				v18 = 5;
			end
		end
	end
	vv9(), ...);
end
